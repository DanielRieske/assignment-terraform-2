name: Assignment Terraform - Infrastructure Production Pipeline

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Trigger Google Cloud Build
    environment: production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
        access_token_lifetime: '120s'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v0.3.0'

    - name: Setup Terraform
      uses: 'hashicorp/setup-terraform@v1'

    - name: Initialize Terraform
      run: terraform init

    - name: Select Terraform workspace
      run: terraform workspace select prod

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -var-file=config/prod.tfvars